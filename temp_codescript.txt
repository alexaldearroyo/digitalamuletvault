// src/app/layout.js:

import { Inter } from 'next/font/google';
import './globals.css';
import { library } from '@fortawesome/fontawesome-svg-core';
import { fas } from '@fortawesome/free-solid-svg-icons';
import { fab } from '@fortawesome/free-brands-svg-icons';
import { CartProvider } from '../context/CartContext';

library.add(fas, fab);

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Digital Amulet Vault',
  description: 'Get the charms from the interwebs',
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <CartProvider>{children}</CartProvider>
      </body>
    </html>
  );
}

----------------------------------------


// src/app/products/[id]/page.js

import Link from 'next/link';
import Header from '../../../components/Header';
import AddToCartButton from '../../../components/AddToCartButton';

const mockProducts = [
  {
    id: 1,
    name: 'Product 1',
    description: 'Description for Product 1',
    image: '/images/product1.jpg',
    price: 10.99,
  },
  {
    id: 2,
    name: 'Product 2',
    description: 'Description for Product 2',
    image: '/images/product2.jpg',
    price: 20.99,
  },
  {
    id: 3,
    name: 'Product 3',
    description: 'Description for Product 3',
    image: '/images/product3.jpg',
    price: 30.99,
  },
  {
    id: 4,
    name: 'Product 4',
    description: 'Description for Product 4',
    image: '/images/product4.jpg',
    price: 40.99,
  },
];

export function generateStaticParams() {
  return mockProducts.map((product) => ({
    id: product.id.toString(),
  }));
}

export default function ProductPage({ params }) {
  const product = mockProducts.find(
    (product) => product.id.toString() === params.id,
  );

  if (!product) {
    return <p>Product not found</p>;
  }

  return (
    <div className="container mx-auto p-6">
      <Header />
      <div className="product-detail">
        <h1 className="text-2xl font-bold mb-4">{product.name}</h1>
        <img
          src={product.image}
          alt={product.name}
          className="mb-4"
          data-test-id="product-image"
        />
        <p>{product.description}</p>
        <p className="text-xl font-semibold mb-4" data-test-id="product-price">
          {product.price}
        </p>
        <AddToCartButton product={product} />
      </div>
    </div>
  );
}

----------------------------------------

// src/app/page.js:

import Link from 'next/link';
import Header from '../components/Header';

// change name of function later
const mockProducts = [
  { id: 1, name: 'Product 1' },
  { id: 2, name: 'Product 2' },
  { id: 3, name: 'Product 3' },
  { id: 4, name: 'Product 4' },
];

export default function ProductsPage() {
  return (
    <div className="container mx-auto p-6">
      <Header />
      <div className="product-list">
        {mockProducts.map((product) => (
          <Link
            href={`/products/${product.id}`}
            key={product.id}
            data-test-id={`product-${product.id}`}
          >
            <div className="product-card">
              <h2>{product.name}</h2>
            </div>
          </Link>
        ))}
      </div>
    </div>
  );
}

----------------------------------------

// src/app/checkout/page.js:

import Link from 'next/link';
import Header from '../../components/Header';

export default function CheckoutPage() {
  return (
    <div className="container mx-auto p-6">
      <Header />
      <h1>Checkout Page</h1>
      <p>Your order has been placed successfully!</p>
      <Link href="/">
        <button className="bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600">
          Continue Shopping
        </button>
      </Link>
    </div>
  );
}

----------------------------------------

// src/app/cart/page.js:

'use client';

import { useCart } from '../../context/CartContext';
import Link from 'next/link';
import Header from '../../components/Header';

export default function CartPage() {
  const { cart, removeFromCart } = useCart();
  const totalPrice = cart.reduce(
    (total, product) => total + product.price * product.quantity,
    0,
  );

  return (
    <div className="container mx-auto p-6">
      <Header />
      <div className="cart">
        {cart.length === 0 ? (
          <p>No products in the cart.</p>
        ) : (
          cart.map((product) => (
            <div
              className="cart-product"
              key={product.id}
              data-test-id={`cart-product-${product.id}`}
            >
              <h2>{product.name}</h2>
              <p data-test-id={`cart-product-quantity-${product.id}`}>
                {product.quantity}
              </p>
              <p>{(product.price * product.quantity).toFixed(2)}</p>
              <button
                onClick={() => removeFromCart(product.id)}
                data-test-id={`cart-product-remove-${product.id}`}
              >
                Remove
              </button>
            </div>
          ))
        )}
        <div data-test-id="cart-total">{totalPrice.toFixed(2)}</div>
        <Link href="/checkout">
          <button data-test-id="cart-checkout">Checkout</button>
        </Link>
      </div>
    </div>
  );
}

----------------------------------------

// src/app/globals.css:

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  @apply bg-gray-100 text-gray-900;
}

.product-list {
  @apply grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6;
}

.product-card {
  @apply bg-white shadow-md rounded-lg overflow-hidden transition-transform transform hover:scale-105;
}

.product-card h2 {
  @apply text-lg font-semibold p-4;
}

@font-face {
  font-family: 'Pilowlava';
  src: url('/Pilowlava-Regular.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

.text-4xl {
  font-family: 'Pilowlava', sans-serif;
}

----------------------------------------

// src/components/AddToCartButton.js:

'use client';

import { useState } from 'react';
import { useCart } from '../context/CartContext';

export default function AddToCartButton({ product }) {
  const [quantity, setQuantity] = useState(1);
  const { addToCart } = useCart();

  const handleQuantityChange = (e) => {
    const inputValue = parseInt(e.target.value, 10) || 0; // Ensure a valid number or 0
    setQuantity(inputValue < 1 ? 1 : inputValue); // Set to 1 if less than 1
  };

  const handleAddToCart = () => {
    addToCart(product, quantity);
    // Logic to add to cart
    console.log(`Added ${product.name} to cart with quantity: ${quantity}`);
  };

  return (
    <div>
      <div className="flex items-center mb-4">
        <label htmlFor="quantity" className="mr-2">
          Quantity:
        </label>
        <input
          type="number"
          id="quantity"
          name="quantity"
          min="1" // Set minimum value to 1
          value={quantity}
          onChange={handleQuantityChange} // Use the modified change handler
          className="border p-2"
          data-test-id="product-quantity"
        />
      </div>
      <button
        onClick={handleAddToCart}
        className="bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600"
        data-test-id="product-add-to-cart"
      >
        Add to Cart
      </button>
    </div>
  );
}

----------------------------------------

// src/components/Header.js:

'use client';

import Link from 'next/link';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faShoppingCart } from '@fortawesome/free-solid-svg-icons';
import { useCart } from '../context/CartContext';
import { useEffect, useState } from 'react';

export default function Header() {
  const { cart } = useCart();
  const [cartCount, setCartCount] = useState(0);

  useEffect(() => {
    setCartCount(cart.reduce((total, product) => total + product.quantity, 0));
  }, [cart]);

  return (
    <header className="mb-8 flex justify-between items-center">
      <div>
        <h1 className="text-4xl font-bold mb-4">The Digital Amulet Vault</h1>
        <Link href="/" className="ml-4" data-test-id="products-link">
          <span className="text-blue-500 hover:underline">Products</span>
        </Link>
      </div>
      <Link href="/cart" className="ml-4" data-test-id="cart-link">
        <button className="bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 flex items-center justify-center">
          <FontAwesomeIcon
            icon={faShoppingCart}
            className="text-white text-xl"
          />{' '}
          Cart ({cartCount})
        </button>
      </Link>
    </header>
  );
}

----------------------------------------

// src/context/CartContext.js:

// Context that manages the cart state globally
'use client';

import { createContext, useContext, useState } from 'react';

const CartContext = createContext();

export function CartProvider({ children }) {
  const [cart, setCart] = useState([]);

  const addToCart = (product, quantity) => {
    setCart((prevCart) => {
      const existingProduct = prevCart.find((item) => item.id === product.id);
      if (existingProduct) {
        return prevCart.map((item) =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + quantity }
            : item,
        );
      }
      return [...prevCart, { ...product, quantity }];
    });
  };

  const removeFromCart = (productId) => {
    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));
  };

  return (
    <CartContext.Provider value={{ cart, addToCart, removeFromCart }}>
      {children}
    </CartContext.Provider>
  );
}

export const useCart = () => useContext(CartContext);

----------------------------------------

// src/fontawesome.js:

import { library } from '@fortawesome/fontawesome-svg-core';
import { faShoppingCart } from '@fortawesome/free-solid-svg-icons';

library.add(faShoppingCart);

----------------------------------------

